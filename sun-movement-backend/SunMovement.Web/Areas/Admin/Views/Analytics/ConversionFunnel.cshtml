@{
    ViewData["Title"] = "Conversion Funnel Analysis";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Conversion Funnel Analysis</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="HomeAdmin" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-action="Dashboard">Analytics</a></li>
        <li class="breadcrumb-item active">Conversion Funnel</li>
    </ol>
    
    <div class="row mb-4">
        <div class="col-xl-12">
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-filter me-1"></i>
                    Shopping Funnel Conversion Rates
                </div>
                <div class="card-body">
                    <div id="funnelChart" style="height: 400px;"></div>
                </div>
                <div class="card-footer small text-muted">
                    Last updated @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-line me-1"></i>
                    Funnel Conversion Over Time
                </div>
                <div class="card-body">
                    <canvas id="conversionTrendChart" width="100%" height="50"></canvas>
                </div>
                <div class="card-footer small text-muted">
                    Last updated @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Drop-off Reasons
                </div>
                <div class="card-body">
                    <canvas id="dropoffChart" width="100%" height="50"></canvas>
                </div>
                <div class="card-footer small text-muted">
                    Last updated @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
                </div>
            </div>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Product Conversion Performance
        </div>
        <div class="card-body">
            <table id="productConversionTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Views</th>
                        <th>Add to Cart</th>
                        <th>Purchases</th>
                        <th>View-to-Cart %</th>
                        <th>Cart-to-Purchase %</th>
                        <th>Overall Conversion %</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in ViewBag.ProductConversions ?? new List<dynamic>())
                    {
                        <tr>
                            <td>@product.ProductName</td>
                            <td>@product.Views.ToString("N0")</td>
                            <td>@product.AddToCarts.ToString("N0")</td>
                            <td>@product.Purchases.ToString("N0")</td>
                            <td>@product.ViewToCartRate.ToString("P2")</td>
                            <td>@product.CartToPurchaseRate.ToString("P2")</td>
                            <td>@product.OverallConversionRate.ToString("P2")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer small text-muted">
            Last updated @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
        </div>
    </div>
    
    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-tags me-1"></i>
                    Category Conversion Performance
                </div>
                <div class="card-body">
                    <table id="categoryConversionTable" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Category</th>
                                <th>View-to-Cart %</th>
                                <th>Cart-to-Purchase %</th>
                                <th>Overall %</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in ViewBag.CategoryConversions ?? new List<dynamic>())
                            {
                                <tr>
                                    <td>@category.CategoryName</td>
                                    <td>@category.ViewToCartRate.ToString("P2")</td>
                                    <td>@category.CartToPurchaseRate.ToString("P2")</td>
                                    <td>@category.OverallConversionRate.ToString("P2")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="card-footer small text-muted">
                    Last updated @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-bullseye me-1"></i>
                    Recommendation Impact on Conversions
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 border-end">
                            <div class="text-center mb-3">
                                <h5>With Recommendations</h5>
                                <h2 class="text-success">@ViewBag.RecommendationConversionRate?.ToString("P2")</h2>
                                <p>Conversion Rate</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="text-center mb-3">
                                <h5>Without Recommendations</h5>
                                <h2>@ViewBag.NonRecommendationConversionRate?.ToString("P2")</h2>
                                <p>Conversion Rate</p>
                            </div>
                        </div>
                    </div>
                    <div class="text-center mt-3">
                        <h5>Improvement</h5>
                        <h3 class="@(ViewBag.ConversionImprovement > 0 ? "text-success" : "text-danger")">
                            @(ViewBag.ConversionImprovement > 0 ? "+" : "")@ViewBag.ConversionImprovement?.ToString("P2")
                        </h3>
                    </div>
                </div>
                <div class="card-footer small text-muted">
                    Last updated @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/d3@5.16.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/d3-funnel@1.2.2"></script>
    <script>
        // Load charts when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Funnel Chart
            const funnelData = [
                { label: 'Page Views', value: @ViewBag.FunnelSteps?.PageViews ?? 0 },
                { label: 'Product Views', value: @ViewBag.FunnelSteps?.ProductViews ?? 0 },
                { label: 'Add to Cart', value: @ViewBag.FunnelSteps?.AddToCarts ?? 0 },
                { label: 'Checkout Started', value: @ViewBag.FunnelSteps?.CheckoutStarts ?? 0 },
                { label: 'Purchases', value: @ViewBag.FunnelSteps?.Purchases ?? 0 }
            ];
            
            const options = {
                block: {
                    dynamicHeight: true,
                    minHeight: 30,
                    highlight: true,
                },
                chart: {
                    width: 800,
                    height: 400,
                    curve: {
                        enabled: true
                    },
                },
                label: {
                    format: '{l}: {f}',
                },
                tooltip: {
                    enabled: true
                }
            };
            
            const funnel = new D3Funnel('#funnelChart');
            funnel.draw(funnelData, options);
            
            // Conversion Trend Chart
            var trendCtx = document.getElementById('conversionTrendChart').getContext('2d');
            new Chart(trendCtx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(ViewBag.ConversionTrendDates ?? new List<string>())),
                    datasets: [
                        {
                            label: 'View to Cart',
                            data: @Html.Raw(Json.Serialize(ViewBag.ViewToCartTrend ?? new List<double>())),
                            borderColor: 'rgba(0, 123, 255, 1)',
                            backgroundColor: 'rgba(0, 123, 255, 0.1)',
                            tension: 0.4,
                            fill: true
                        },
                        {
                            label: 'Cart to Purchase',
                            data: @Html.Raw(Json.Serialize(ViewBag.CartToPurchaseTrend ?? new List<double>())),
                            borderColor: 'rgba(40, 167, 69, 1)',
                            backgroundColor: 'rgba(40, 167, 69, 0.1)',
                            tension: 0.4,
                            fill: true
                        },
                        {
                            label: 'Overall Conversion',
                            data: @Html.Raw(Json.Serialize(ViewBag.OverallConversionTrend ?? new List<double>())),
                            borderColor: 'rgba(220, 53, 69, 1)',
                            backgroundColor: 'rgba(220, 53, 69, 0.1)',
                            tension: 0.4,
                            fill: true
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return (value * 100).toFixed(1) + '%';
                                }
                            }
                        }
                    },
                    tooltips: {
                        callbacks: {
                            label: function(tooltipItem, data) {
                                return data.datasets[tooltipItem.datasetIndex].label + ': ' + (tooltipItem.yLabel * 100).toFixed(2) + '%';
                            }
                        }
                    }
                }
            });
            
            // Drop-off Chart
            var dropoffCtx = document.getElementById('dropoffChart').getContext('2d');
            new Chart(dropoffCtx, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(ViewBag.DropoffReasons ?? new List<string>())),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(ViewBag.DropoffCounts ?? new List<int>())),
                        backgroundColor: [
                            'rgba(220, 53, 69, 0.7)',
                            'rgba(255, 193, 7, 0.7)',
                            'rgba(23, 162, 184, 0.7)',
                            'rgba(108, 117, 125, 0.7)',
                            'rgba(0, 123, 255, 0.7)'
                        ]
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        callbacks: {
                            label: function(tooltipItem, data) {
                                const dataset = data.datasets[tooltipItem.datasetIndex];
                                const total = dataset.data.reduce((acc, data) => acc + data, 0);
                                const currentValue = dataset.data[tooltipItem.index];
                                const percentage = ((currentValue / total) * 100).toFixed(2) + '%';
                                return data.labels[tooltipItem.index] + ': ' + percentage;
                            }
                        }
                    }
                }
            });
            
            // Initialize DataTables
            $('#productConversionTable').DataTable({
                order: [[6, 'desc']] // Sort by overall conversion rate
            });
            
            $('#categoryConversionTable').DataTable({
                order: [[3, 'desc']] // Sort by overall conversion rate
            });
        });
    </script>
}
