@model SunMovement.Web.Areas.Admin.Models.InventoryStockInViewModel
@{
    ViewBag.Title = "Nhập kho";
}
<h2>Nhập kho test</h2>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<form asp-action="StockIn" method="post" enctype="multipart/form-data">
    <div class="form-group mb-3">
        <label>Sản phẩm</label>
        <select asp-for="ProductId" class="form-control" id="ProductSelect" name="ProductId" onchange="onProductChange(); validateProductField();">
            <option value="">+ Thêm sản phẩm mới</option>
            @foreach (var item in ViewBag.Products as IEnumerable<SelectListItem>)
            {
                <option value="@item.Value">@item.Text</option>
            }
        </select>
        <input type="hidden" asp-for="IsNewProduct" id="IsNewProduct" />
        <span asp-validation-for="ProductId" class="text-danger"></span>
    </div>
    <div id="newProductFields" style="display:none;">
        <div class="form-group mb-3">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" id="NewProductName" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <label asp-for="CategoryId"></label>
            <select asp-for="CategoryId" class="form-control" id="CategorySelect">
                <option value="">-- Chọn danh mục --</option>
                @foreach (var item in ViewBag.Categories as IEnumerable<SelectListItem>)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
            <span asp-validation-for="CategoryId" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <label asp-for="Price"></label>
            <input asp-for="Price" class="form-control" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <label asp-for="Description"></label>
            <textarea asp-for="Description" class="form-control"></textarea>
        </div>
        <div class="form-group mb-3">
            <label asp-for="ImageFile"></label>
            <input asp-for="ImageFile" type="file" class="form-control" accept="image/*" onchange="previewImage(event)" />
            <img id="imagePreview" src="#" alt="Preview" style="max-width:200px;display:none;margin-top:10px;" />
        </div>
        <div class="form-group mb-3">
            <label><input type="checkbox" asp-for="IsSportwear" id="IsSportwearCheckbox" onchange="onCategoryChange()" /> Là đồ thể thao (quản lý size)</label>
        </div>
    </div>
    <div id="sizeFields" style="display:none;">
        <label>Tồn kho từng size</label>
        <table class="table table-bordered">
            <thead><tr><th>Size</th><th>Số lượng</th></tr></thead>
            <tbody>
                @foreach (var size in new[] { "S", "M", "L", "XL", "XXL", "XXXL" })
                {
                    <tr>
                        <td><input type="text" name="Sizes[@size].Size" value="@size" readonly class="form-control" /></td>
                        <td><input type="number" name="Sizes[@size].Quantity" value="0" min="0" class="form-control" /></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="quantityField" class="form-group mb-3">
        <label asp-for="Quantity"></label>
        <input asp-for="Quantity" class="form-control" />
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="UnitPrice"></label>
        <input asp-for="UnitPrice" class="form-control" />
    </div>
    <div class="form-group mb-3">
        <label>Nhà cung cấp</label>
        <select asp-for="SupplierId" class="form-control" id="SupplierSelect" name="SupplierId" onchange="onSupplierChange(); validateSupplierField()">
            <option value="">+ Thêm nhà cung cấp mới</option>
            @foreach (var item in ViewBag.Suppliers as IEnumerable<SelectListItem>)
            {
                <option value="@item.Value">@item.Text</option>
            }
        </select>
        <input type="hidden" asp-for="IsNewSupplier" id="IsNewSupplier" />
        <span asp-validation-for="SupplierId" class="text-danger"></span>
    </div>
    <div id="newSupplierField" class="form-group mb-3" style="display:none;">
        <label for="NewSupplierName">Tên nhà cung cấp mới</label>
        <input type="text" name="NewSupplierName" id="NewSupplierName" class="form-control" />
        <span class="text-danger" id="NewSupplierNameError"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Notes"></label>
        <textarea asp-for="Notes" class="form-control"></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Nhập kho</button>
</form>
@section Scripts {
    <script>
        function onProductChange() {
            var val = document.getElementById('ProductSelect').value;
            var newFields = document.getElementById('newProductFields');
            var isNewProductInput = document.getElementById('IsNewProduct');
            if (val === "") {
                newFields.style.display = '';
                isNewProductInput.value = 'true';
            } else {
                newFields.style.display = 'none';
                isNewProductInput.value = 'false';
            }
            onCategoryChange();
            validateProductField();
        }
        function onCategoryChange() {
            var isSportwear = document.getElementById('IsSportwearCheckbox') && document.getElementById('IsSportwearCheckbox').checked;
            var sizeFields = document.getElementById('sizeFields');
            var quantityField = document.getElementById('quantityField');
            if (isSportwear) {
                sizeFields.style.display = '';
                quantityField.style.display = 'none';
            } else {
                sizeFields.style.display = 'none';
                quantityField.style.display = '';
            }
        }
        function onSupplierChange() {
            var val = document.getElementById('SupplierSelect').value;
            var newSupplierField = document.getElementById('newSupplierField');
            var isNewSupplierInput = document.getElementById('IsNewSupplier');
            if (val === "") {
                newSupplierField.style.display = '';
                isNewSupplierInput.value = 'true';
            } else {
                newSupplierField.style.display = 'none';
                isNewSupplierInput.value = 'false';
            }
            validateSupplierField();
        }
        function previewImage(event) {
            var input = event.target;
            var preview = document.getElementById('imagePreview');
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '#';
                preview.style.display = 'none';
            }
        }
        function validateProductField() {
            var productSelect = document.getElementById('ProductSelect');
            var newProductName = document.getElementById('NewProductName');
            var isNewProductInput = document.getElementById('IsNewProduct');
            if (productSelect.value === "") {
                productSelect.removeAttribute('required');
                if (newProductName) newProductName.setAttribute('required', 'required');
                isNewProductInput.value = 'true';
            } else {
                productSelect.setAttribute('required', 'required');
                if (newProductName) newProductName.removeAttribute('required');
                isNewProductInput.value = 'false';
            }
        }
        function validateSupplierField() {
            var supplierSelect = document.getElementById('SupplierSelect');
            var newSupplierName = document.getElementById('NewSupplierName');
            var isNewSupplierInput = document.getElementById('IsNewSupplier');
            if (supplierSelect.value === "") {
                supplierSelect.removeAttribute('required');
                if (newSupplierName) newSupplierName.setAttribute('required', 'required');
                isNewSupplierInput.value = 'true';
            } else {
                supplierSelect.setAttribute('required', 'required');
                if (newSupplierName) newSupplierName.removeAttribute('required');
                isNewSupplierInput.value = 'false';
            }
        }
        document.addEventListener('DOMContentLoaded', function() {
            onProductChange();
            onSupplierChange();
            validateProductField();
            validateSupplierField();
        });
        // Khi submit, nếu là sản phẩm mới thì ProductId sẽ là rỗng
        document.querySelector('form').addEventListener('submit', function(e) {
            var isNewProduct = document.getElementById('IsNewProduct').value === 'true';
            if (isNewProduct) {
                document.getElementById('ProductSelect').value = '';
            }
            var isNewSupplier = document.getElementById('IsNewSupplier').value === 'true';
            if (isNewSupplier) {
                document.getElementById('SupplierSelect').value = '';
            }
        });
    </script>
}
