@model IEnumerable<SunMovement.Web.ViewModels.UserAdminViewModel>
@{
    ViewData["Title"] = "Quản lý người dùng";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">@ViewData["Title"]</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="AdminDashboard" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item active">Quản lý người dùng</li>
    </ol>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Actions Section -->
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group me-2">
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Thêm người dùng mới
                </a>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-search me-1"></i>
            Tìm kiếm và lọc người dùng
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="searchQuery" class="form-label">Tìm kiếm</label>
                    <input type="text" class="form-control" id="searchQuery" placeholder="Tên, email, số điện thoại...">
                </div>
                <div class="col-md-3">
                    <label for="roleFilter" class="form-label">Vai trò</label>
                    <select class="form-select" id="roleFilter">
                        <option value="">Tất cả vai trò</option>
                        <option value="Admin">Admin</option>
                        <option value="Customer">Khách hàng</option>
                        <option value="Staff">Nhân viên</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label">Trạng thái</label>
                    <select class="form-select" id="statusFilter">
                        <option value="">Tất cả trạng thái</option>
                        <option value="active">Hoạt động</option>
                        <option value="locked">Bị khóa</option>
                        <option value="unconfirmed">Chưa xác nhận email</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="clearFilter" class="form-label">&nbsp;</label>
                    <button type="button" class="btn btn-outline-secondary d-block w-100" id="clearFilter">
                        <i class="fas fa-times"></i> Xóa bộ lọc
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card">
        <div class="card-header">
            <i class="fas fa-users me-1"></i>
            Danh sách người dùng (@Model.Count() người dùng)
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="usersTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Tên đăng nhập</th>
                            <th>Họ và tên</th>
                            <th>Email</th>
                            <th>Số điện thoại</th>
                            <th>Vai trò</th>
                            <th>Trạng thái</th>
                            <th>Ngày tạo</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr data-user-id="@user.Id" 
                                data-username="@user.UserName?.ToLower()" 
                                data-email="@user.Email?.ToLower()" 
                                data-fullname="@user.FullName.ToLower()"
                                data-phone="@user.PhoneNumber"
                                data-roles="@string.Join(",", user.Roles).ToLower()"
                                data-status="@(user.IsLockedOut ? "locked" : (!user.EmailConfirmed ? "unconfirmed" : "active"))">
                                <td>
                                    <strong>@user.UserName</strong>
                                </td>
                                <td>@user.FullName</td>
                                <td>
                                    @user.Email
                                    @if (!user.EmailConfirmed)
                                    {
                                        <span class="badge bg-warning text-dark ms-1">Chưa xác nhận</span>
                                    }
                                </td>
                                <td>@user.PhoneNumber</td>
                                <td>
                                    @foreach (var role in user.Roles)
                                    {
                                        <span class="badge bg-@(role == "Admin" ? "danger" : role == "Staff" ? "warning" : "info") me-1">@role</span>
                                    }
                                </td>
                                <td>
                                    @if (user.IsLockedOut)
                                    {
                                        <span class="badge bg-danger">
                                            <i class="fas fa-lock"></i> Bị khóa
                                        </span>
                                        <br>
                                        <small class="text-muted">Đến: @user.LockoutEnd?.ToString("dd/MM/yyyy HH:mm")</small>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle"></i> Hoạt động
                                        </span>
                                    }
                                </td>
                                <td>
                                    <small>@user.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-sm btn-info" title="Xem chi tiết">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning" title="Chỉnh sửa">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        @if (user.IsLockedOut)
                                        {
                                            <button type="button" class="btn btn-sm btn-success" onclick="unlockUser('@user.Id')" title="Mở khóa">
                                                <i class="fas fa-unlock"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-sm btn-warning" onclick="lockUser('@user.Id', '@user.UserName')" title="Khóa tài khoản">
                                                <i class="fas fa-lock"></i>
                                            </button>
                                        }
                                        <button type="button" class="btn btn-sm btn-secondary" onclick="resetPassword('@user.Id', '@user.UserName')" title="Đặt lại mật khẩu">
                                            <i class="fas fa-key"></i>
                                        </button>
                                        <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-sm btn-danger" title="Xóa" 
                                           onclick="return confirm('Bạn có chắc chắn muốn xóa người dùng @user.UserName không?')">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            @if (!Model.Any())
            {
                <div class="text-center py-4">
                    <i class="fas fa-users fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Không có người dùng nào</h5>
                    <p class="text-muted">Hãy thêm người dùng mới để bắt đầu quản lý.</p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Thêm người dùng đầu tiên
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Lock User Modal -->
<div class="modal fade" id="lockUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Khóa tài khoản người dùng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="lockUserForm" method="post">
                <div class="modal-body">
                    <p>Bạn có chắc chắn muốn khóa tài khoản người dùng <strong id="lockUserName"></strong> không?</p>
                    <div class="mb-3">
                        <label for="lockoutDays" class="form-label">Số ngày khóa</label>
                        <select class="form-select" id="lockoutDays" name="lockoutDays">
                            <option value="1">1 ngày</option>
                            <option value="3">3 ngày</option>
                            <option value="7" selected>7 ngày</option>
                            <option value="30">30 ngày</option>
                            <option value="365">1 năm</option>
                        </select>
                    </div>
                    <input type="hidden" id="lockUserId" name="id" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-warning">Khóa tài khoản</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Đặt lại mật khẩu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="resetPasswordForm" method="post">
                <div class="modal-body">
                    <p>Đặt lại mật khẩu cho người dùng <strong id="resetPasswordUserName"></strong></p>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">Mật khẩu mới</label>
                        <input type="password" class="form-control" id="newPassword" name="newPassword" required minlength="8">
                        <div class="form-text">Mật khẩu phải có ít nhất 8 ký tự</div>
                    </div>
                    <input type="hidden" id="resetPasswordUserId" name="id" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Đặt lại mật khẩu</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search and filter functionality
        document.getElementById('searchQuery').addEventListener('input', filterUsers);
        document.getElementById('roleFilter').addEventListener('change', filterUsers);
        document.getElementById('statusFilter').addEventListener('change', filterUsers);
        document.getElementById('clearFilter').addEventListener('click', clearFilters);

        function filterUsers() {
            const searchQuery = document.getElementById('searchQuery').value.toLowerCase();
            const roleFilter = document.getElementById('roleFilter').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value.toLowerCase();
            
            const rows = document.querySelectorAll('#usersTable tbody tr');
            
            rows.forEach(row => {
                const username = row.dataset.username || '';
                const email = row.dataset.email || '';
                const fullname = row.dataset.fullname || '';
                const phone = row.dataset.phone || '';
                const roles = row.dataset.roles || '';
                const status = row.dataset.status || '';
                
                const matchesSearch = !searchQuery || 
                    username.includes(searchQuery) || 
                    email.includes(searchQuery) || 
                    fullname.includes(searchQuery) || 
                    phone.includes(searchQuery);
                
                const matchesRole = !roleFilter || roles.includes(roleFilter);
                const matchesStatus = !statusFilter || status === statusFilter;
                
                if (matchesSearch && matchesRole && matchesStatus) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function clearFilters() {
            document.getElementById('searchQuery').value = '';
            document.getElementById('roleFilter').value = '';
            document.getElementById('statusFilter').value = '';
            filterUsers();
        }

        // Lock user functionality
        function lockUser(userId, userName) {
            document.getElementById('lockUserId').value = userId;
            document.getElementById('lockUserName').textContent = userName;
            document.getElementById('lockUserForm').action = '@Url.Action("LockUser", "UsersAdmin")';
            
            const modal = new bootstrap.Modal(document.getElementById('lockUserModal'));
            modal.show();
        }

        // Unlock user functionality
        function unlockUser(userId) {
            if (confirm('Bạn có chắc chắn muốn mở khóa tài khoản này không?')) {
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("UnlockUser", "UsersAdmin")';
                
                const idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = userId;
                form.appendChild(idInput);
                
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                form.appendChild(tokenInput);
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Reset password functionality
        function resetPassword(userId, userName) {
            document.getElementById('resetPasswordUserId').value = userId;
            document.getElementById('resetPasswordUserName').textContent = userName;
            document.getElementById('resetPasswordForm').action = '@Url.Action("ResetPassword", "UsersAdmin")';
            
            const modal = new bootstrap.Modal(document.getElementById('resetPasswordModal'));
            modal.show();
        }
    </script>
}
