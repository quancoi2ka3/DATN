@model IEnumerable<SunMovement.Core.Models.Order>
@using SunMovement.Core.Models

@{
    ViewData["Title"] = "Manage Orders";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Orders</h1>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info">
        No orders found.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Customer</th>
                    <th>Date</th>
                    <th>Total</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {                    <tr>
                        <td>@item.Id</td>
                        <td>@(item.User != null ? $"{item.User.FirstName} {item.User.LastName}" : "Guest")</td>
                        <td>@item.OrderDate.ToString("MMM dd, yyyy")</td>
                        <td>$@item.TotalAmount.ToString("F2")</td>
                        <td>
                            @switch (item.Status)
                            {
                                case SunMovement.Core.Models.OrderStatus.Pending:
                                    <span class="badge bg-warning">Pending</span>
                                    break;
                                case SunMovement.Core.Models.OrderStatus.Processing:
                                    <span class="badge bg-info">Processing</span>
                                    break;
                                case SunMovement.Core.Models.OrderStatus.Shipped:
                                    <span class="badge bg-primary">Shipped</span>
                                    break;
                                case SunMovement.Core.Models.OrderStatus.Delivered:
                                    <span class="badge bg-success">Delivered</span>
                                    break;
                                case SunMovement.Core.Models.OrderStatus.Cancelled:
                                    <span class="badge bg-danger">Cancelled</span>
                                    break;
                                default:
                                    <span class="badge bg-secondary">Unknown</span>
                                    break;
                            }
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="OrderDetails" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Details</a>
                                <a asp-action="UpdateOrderStatus" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Update Status</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
