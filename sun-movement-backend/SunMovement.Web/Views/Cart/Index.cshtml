@model ShoppingCartViewModel
@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container my-5">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Items.Count == 0)
    {
        <div class="text-center py-5">
            <i class="bi bi-cart-x" style="font-size: 5rem;"></i>
            <h3 class="mt-3">Your cart is empty</h3>
            <p class="text-muted">Browse our products and services to add items to your cart</p>
            <div class="mt-4">
                <a asp-controller="Products" asp-action="Index" class="btn btn-primary me-2">Browse Products</a>
                <a asp-controller="Services" asp-action="Index" class="btn btn-outline-primary">Browse Services</a>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Cart Items (@Model.TotalItems)</h5>
                        <form asp-action="ClearCart" method="post">
                            <button type="submit" class="btn btn-sm btn-outline-danger" 
                                    onclick="return confirm('Are you sure you want to clear your cart?')">
                                <i class="bi bi-trash"></i> Clear Cart
                            </button>
                        </form>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Subtotal</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.ItemImageUrl))
                                                    {
                                                        <img src="@item.ItemImageUrl" alt="@item.ItemName" class="img-thumbnail me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                                    }
                                                    else
                                                    {
                                                        <div class="bg-secondary me-3" style="width: 60px; height: 60px;"></div>
                                                    }
                                                    <div>
                                                        <h6 class="mb-0">@item.ItemName</h6>
                                                        <small class="text-muted">
                                                            @(item.ProductId.HasValue ? "Product" : "Service")
                                                        </small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>@item.UnitPrice.ToString("C")</td>
                                            <td>
                                                <form asp-action="UpdateCartItem" method="post" class="d-flex align-items-center">
                                                    <input type="hidden" name="itemId" value="@item.Id" />
                                                    <div class="input-group input-group-sm" style="width: 100px;">
                                                        <button type="button" class="btn btn-outline-secondary quantity-btn" data-action="decrease">-</button>
                                                        <input type="number" name="quantity" class="form-control text-center quantity-input" 
                                                               value="@item.Quantity" min="1" max="99" data-item-id="@item.Id">
                                                        <button type="button" class="btn btn-outline-secondary quantity-btn" data-action="increase">+</button>
                                                    </div>
                                                </form>
                                            </td>
                                            <td>@item.Subtotal.ToString("C")</td>
                                            <td>
                                                <form asp-action="RemoveCartItem" method="post">
                                                    <input type="hidden" name="itemId" value="@item.Id" />
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" title="Remove item">
                                                        <i class="bi bi-x-lg"></i>
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Order Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <span>Items (@Model.TotalItems):</span>
                            <span>@Model.TotalAmount.ToString("C")</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-4">
                            <strong>Total:</strong>
                            <strong>@Model.TotalAmount.ToString("C")</strong>
                        </div>
                        <a asp-action="Checkout" class="btn btn-primary btn-lg w-100">Proceed to Checkout</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Quantity adjustment
        document.addEventListener('DOMContentLoaded', function () {
            const quantityBtns = document.querySelectorAll('.quantity-btn');
            
            quantityBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const action = this.dataset.action;
                    const inputGroup = this.closest('.input-group');
                    const input = inputGroup.querySelector('.quantity-input');
                    let value = parseInt(input.value);
                    
                    if (action === 'increase') {
                        if (value < 99) {
                            input.value = value + 1;
                            updateCartItem(input);
                        }
                    } else if (action === 'decrease') {
                        if (value > 1) {
                            input.value = value - 1;
                            updateCartItem(input);
                        }
                    }
                });
            });
            
            const quantityInputs = document.querySelectorAll('.quantity-input');
            quantityInputs.forEach(input => {
                input.addEventListener('change', function() {
                    updateCartItem(this);
                });
            });
            
            function updateCartItem(input) {
                const itemId = input.dataset.itemId;
                const quantity = input.value;
                const form = input.closest('form');
                form.submit();
            }
        });
    </script>
}
