"use client";

import { Suspense } from "react";
import { LazyOnScroll, SectionSkeleton } from "@/components/ui/lazy-skeleton";
import { Button } from "@/components/ui/button";
import { Star, CheckCircle, Dumbbell, Heart, Users } from "lucide-react";

// Hero Section for Services
function ServicesHeroSection() {
  return (
    <div className="relative bg-gradient-to-br from-orange-500 to-red-600 py-20 overflow-hidden">
      <div className="absolute inset-0 bg-black/10"></div>
      <div className="container mx-auto px-4 text-center relative z-10">
        <div className="space-y-6">
          <h1 className="text-4xl md:text-6xl font-bold text-white">
            D·ªãch V·ª• Fitness Chuy√™n Nghi·ªáp
          </h1>
          <p className="text-xl text-slate-200 max-w-3xl mx-auto">
            Kh√°m ph√° c√°c ch∆∞∆°ng tr√¨nh t·∫≠p luy·ªán ƒë∆∞·ª£c thi·∫øt k·∫ø ri√™ng cho m·ª•c ti√™u c·ªßa b·∫°n
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button className="bg-white text-red-600 hover:bg-red-100 px-8 py-4 h-auto rounded-lg font-medium text-lg">
              <Star className="mr-2 h-5 w-5" />
              ƒêƒÉng k√Ω ngay
            </Button>
            <Button variant="outline" className="border-white text-white hover:bg-white hover:text-red-600 px-8 py-4 h-auto rounded-lg font-medium text-lg">
              T∆∞ v·∫•n mi·ªÖn ph√≠
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}

// Services Grid
function ServicesGridSection() {
  const services = [
    {
      id: 1,
      title: "Calisthenics",
      description: "T·∫≠p luy·ªán v·ªõi tr·ªçng l∆∞·ª£ng c∆° th·ªÉ, ph√°t tri·ªÉn s·ª©c m·∫°nh v√† s·ª± linh ho·∫°t t·ª± nhi√™n",
      icon: <Users className="h-8 w-8" />,
      price: "800.000",
      duration: "60 ph√∫t",
      level: "M·ªçi tr√¨nh ƒë·ªô",
      features: ["X√¢y d·ª±ng s·ª©c m·∫°nh c∆° b·∫£n", "C·∫£i thi·ªán t√≠nh linh ho·∫°t", "Kh√¥ng c·∫ßn thi·∫øt b·ªã"]
    },
    {
      id: 2,
      title: "Strength Training",
      description: "X√¢y d·ª±ng c∆° b·∫Øp v√† s·ª©c m·∫°nh v·ªõi c√°c b√†i t·∫≠p t·∫° v√† thi·∫øt b·ªã chuy√™n nghi·ªáp",
      icon: <Dumbbell className="h-8 w-8" />,
      price: "900.000",
      duration: "75 ph√∫t",
      level: "Trung c·∫•p",
      features: ["TƒÉng kh·ªëi l∆∞·ª£ng c∆°", "Ph√°t tri·ªÉn s·ª©c m·∫°nh", "Thi·∫øt b·ªã chuy√™n nghi·ªáp"]
    },
    {
      id: 3,
      title: "Yoga",
      description: "C√¢n b·∫±ng th·ªÉ ch·∫•t v√† tinh th·∫ßn, tƒÉng c∆∞·ªùng s·ª± linh ho·∫°t v√† th∆∞ gi√£n",
      icon: <Heart className="h-8 w-8" />,
      price: "600.000",
      duration: "90 ph√∫t",
      level: "M·ªçi tr√¨nh ƒë·ªô",
      features: ["Th∆∞ gi√£n tinh th·∫ßn", "TƒÉng t√≠nh linh ho·∫°t", "C√¢n b·∫±ng c∆° th·ªÉ"]
    }
  ];

  return (
    <div className="py-16 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            C√°c G√≥i D·ªãch V·ª•
          </h2>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            Ch·ªçn ch∆∞∆°ng tr√¨nh ph√π h·ª£p v·ªõi m·ª•c ti√™u v√† th·ªùi gian c·ªßa b·∫°n
          </p>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {services.map((service) => (
            <div key={service.id} className="bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow overflow-hidden border">
              <div className="p-6">
                <div className="flex items-center mb-4">
                  <div className="bg-orange-100 p-3 rounded-lg text-orange-600">
                    {service.icon}
                  </div>
                  <h3 className="text-xl font-bold ml-4">{service.title}</h3>
                </div>
                
                <p className="text-gray-600 mb-4">{service.description}</p>
                
                <div className="space-y-2 mb-6">
                  {service.features.map((feature, idx) => (
                    <div key={idx} className="flex items-center">
                      <CheckCircle className="h-4 w-4 text-green-500 mr-2" />
                      <span className="text-sm text-gray-600">{feature}</span>
                    </div>
                  ))}
                </div>
                
                <div className="space-y-2 mb-6">
                  <div className="flex justify-between">
                    <span className="text-gray-500">Th·ªùi l∆∞·ª£ng:</span>
                    <span className="font-medium">{service.duration}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-500">Tr√¨nh ƒë·ªô:</span>
                    <span className="font-medium">{service.level}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-500">Gi√°:</span>
                    <span className="font-bold text-orange-600">{service.price}ƒë/th√°ng</span>
                  </div>
                </div>
                
                <Button className="w-full bg-orange-500 hover:bg-orange-600 text-white font-medium py-3 rounded-lg">
                  ƒêƒÉng k√Ω ngay
                </Button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

// CTA Section
function ServicesCTASection() {
  return (
    <div className="py-16 bg-gradient-to-br from-orange-500 to-red-600">
      <div className="container mx-auto px-4 text-center">
        <div className="max-w-3xl mx-auto">
          <h2 className="text-3xl md:text-4xl font-bold text-white mb-6">
            S·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh c·ªßa b·∫°n?
          </h2>
          <p className="text-xl text-slate-200 mb-4">
            Tr·ªü th√†nh phi√™n b·∫£n t·ªët nh·∫•t c·ªßa ch√≠nh m√¨nh c√πng Sun Movement ngay h√¥m nay
          </p>
          <p className="text-orange-400 font-medium mb-8">
            üéØ Ti·∫øt ki·ªám ƒë·∫øn 40% chi ph√≠ - Ch·ªâ d√†nh cho 100 th√†nh vi√™n ƒë·∫ßu ti√™n!
          </p>
          
          <div className="flex flex-col sm:flex-row gap-4 justify-center mb-6">
            <Button className="bg-white text-red-600 hover:bg-red-100 px-8 py-4 h-auto rounded-lg font-medium text-lg shadow-lg hover:shadow-xl transition-all">
              <Star className="mr-2 h-5 w-5" />
              ƒêƒÉng k√Ω ngay - Ti·∫øt ki·ªám 1.000.000ƒë
            </Button>
          </div>
          
          {/* Trust indicators */}
          <div className="flex flex-wrap justify-center gap-6 text-sm text-slate-300">
            <div className="flex items-center">
              <CheckCircle className="h-4 w-4 mr-2 text-green-400" />
              <span>Cam k·∫øt ho√†n ti·ªÅn 100%</span>
            </div>
            <div className="flex items-center">
              <CheckCircle className="h-4 w-4 mr-2 text-green-400" />
              <span>Kh√¥ng r√†ng bu·ªôc h·ª£p ƒë·ªìng d√†i h·∫°n</span>
            </div>
            <div className="flex items-center">
              <CheckCircle className="h-4 w-4 mr-2 text-green-400" />
              <span>Bu·ªïi t·∫≠p ƒë·∫ßu ti√™n mi·ªÖn ph√≠</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default function ServicesPageOptimized() {
  return (
    <div className="min-h-screen">
      {/* Critical hero section - load immediately */}
      <ServicesHeroSection />
      
      {/* Lazy load services grid */}
      <LazyOnScroll 
        fallback={<SectionSkeleton className="py-16 bg-white" />}
        rootMargin="200px"
      >
        <ServicesGridSection />
      </LazyOnScroll>
      
      {/* Lazy load CTA section */}
      <LazyOnScroll 
        fallback={
          <div className="py-16 bg-gradient-to-br from-orange-500 to-red-600">
            <div className="container mx-auto px-4 text-center space-y-8">
              <div className="h-8 w-80 bg-white/20 rounded mx-auto animate-pulse"></div>
              <div className="h-4 w-96 bg-white/20 rounded mx-auto animate-pulse"></div>
              <div className="h-12 w-48 bg-white/20 rounded mx-auto animate-pulse"></div>
            </div>
          </div>
        }
        rootMargin="100px"
      >
        <ServicesCTASection />
      </LazyOnScroll>
    </div>
  );
}
